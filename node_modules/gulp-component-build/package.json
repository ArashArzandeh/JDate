{
  "name": "gulp-component-build",
  "version": "0.0.4",
  "description": "gulp plugin for build component.",
  "homepage": "https://github.com/hrsh7th/js-gulp-component-build",
  "repository": {
    "type": "git",
    "url": "git://github.com/hrsh7th/js-gulp-component-build.git"
  },
  "bugs": {
    "url": "https://github.com/hrsh7th/js-gulp-component-build/issues"
  },
  "keywords": [
    "gulpplugin",
    "component",
    "build",
    "builder2"
  ],
  "author": {
    "name": "hrsh7th"
  },
  "license": "MIT",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "component-build": "^1.2.0",
    "component-resolver": "^1.1.1",
    "gulp-util": "^2.2.14",
    "through2": "^0.4.1"
  },
  "devDependencies": {
    "component-builder-less": "0.0.2",
    "gulp": "^3.6.2",
    "gulp-rename": "^1.2.0",
    "mocha": "^1.18.2"
  },
  "readme": "gulp-component-build.\n=======================\n\ngulp plugin to build component.\n\nExample\n=======================\n```js\nvar gulp = require('gulp');\nvar rename = require('gulp-rename');\nvar component = require('./index');\n\ngulp.task('compile:scripts', function() {\n  gulp.src('test/fixtures/success-component/component.json')\n    .pipe(component.scripts({ install: true }))\n    .pipe(rename('components.js'))\n    .pipe(gulp.dest('public/js'));\n});\n\ngulp.task('compile:styles', function() {\n  gulp.src('test/fixtures/success-component/component.json')\n    .pipe(component.styles({ install: true }, function(styles, option) {\n      styles.use('styles', require('component-builder-less')({}));\n    }))\n    .pipe(rename('components.css'))\n    .pipe(gulp.dest('public/css'));\n});\n\ngulp.task('compile:files', function() {\n  gulp.src('test/fixtures/success-component/component.json')\n    .pipe(component.files({ install: true }, function(files, option) {\n      // add to copy ext.\n      build.fns.images.forEach(function(fn) {\n        build.use('some-ext1', fn);\n        build.use('some-ext2', fn);\n      });\n    }));\n});\n\ngulp.task('default', ['compile:scripts', 'compile:styles']);\n\n```\n\napi\n-----------------------\n### component.scripts(option, configureFunction) #=> stream.\n- option\n  - ```component/component-build```'s argument.\n- configureFunction\n  - first argument\n    - ```component/component-builder2``` instance. can use to adding some plugins if you want.\n  - second argument\n    - ```option```.\n\n### component.styles(option, configureFunction) #=> stream.\n- same to ```component.scripts```\n\n### component.files(option, configureFunction) #=> stream.\n- same to ```component.scripts```\n\n",
  "readmeFilename": "README.md",
  "_id": "gulp-component-build@0.0.4",
  "_shasum": "20a4f1bf564c79b4ef729d18de4d4c3c2cd8b804",
  "_from": "gulp-component-build@",
  "_resolved": "https://registry.npmjs.org/gulp-component-build/-/gulp-component-build-0.0.4.tgz"
}
